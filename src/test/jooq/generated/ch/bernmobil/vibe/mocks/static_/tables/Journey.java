/*
 * This file is generated by jOOQ.
*/
package ch.bernmobil.vibe.mocks.static_.tables;


import ch.bernmobil.vibe.mocks.static_.Keys;
import ch.bernmobil.vibe.mocks.static_.Public;
import ch.bernmobil.vibe.mocks.static_.tables.records.JourneyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Journey extends TableImpl<JourneyRecord> {

    private static final long serialVersionUID = -563623163;

    /**
     * The reference instance of <code>public.journey</code>
     */
    public static final Journey JOURNEY = new Journey();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JourneyRecord> getRecordType() {
        return JourneyRecord.class;
    }

    /**
     * The column <code>public.journey.id</code>.
     */
    public final TableField<JourneyRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.journey.headsign</code>.
     */
    public final TableField<JourneyRecord, String> HEADSIGN = createField("headsign", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.journey.route</code>.
     */
    public final TableField<JourneyRecord, UUID> ROUTE = createField("route", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.journey.terminal_station</code>.
     */
    public final TableField<JourneyRecord, UUID> TERMINAL_STATION = createField("terminal_station", org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>public.journey.update</code>.
     */
    public final TableField<JourneyRecord, Timestamp> UPDATE = createField("update", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>public.journey</code> table reference
     */
    public Journey() {
        this("journey", null);
    }

    /**
     * Create an aliased <code>public.journey</code> table reference
     */
    public Journey(String alias) {
        this(alias, JOURNEY);
    }

    private Journey(String alias, Table<JourneyRecord> aliased) {
        this(alias, aliased, null);
    }

    private Journey(String alias, Table<JourneyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JourneyRecord> getPrimaryKey() {
        return Keys.JOURNEY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JourneyRecord>> getKeys() {
        return Arrays.<UniqueKey<JourneyRecord>>asList(Keys.JOURNEY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JourneyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JourneyRecord, ?>>asList(Keys.JOURNEY__JOURNEY_ROUTE_FKEY, Keys.JOURNEY__JOURNEY_TERMINAL_STATION_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Journey as(String alias) {
        return new Journey(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Journey rename(String name) {
        return new Journey(name, null);
    }
}
