apply plugin: 'nu.studer.jooq'

dependencies {
    jooqRuntime 'postgresql:postgresql:9.1-901.jdbc4'
    testCompile 'org.jooq:jooq'
}
def generatorName = 'org.jooq.util.DefaultGenerator'
def generatorStrategy = { name = 'org.jooq.util.DefaultGeneratorStrategy' }
def generatorDatabase = {
    name = 'org.jooq.util.postgres.PostgresDatabase'
    inputSchema = 'public'
    forcedTypes {
        forcedType {
            name = 'varchar'
            expression = '.*'
            types = 'JSONB?'
        }
        forcedType {
            name = 'varchar'
            expression = '.*'
            types = 'INET'
        }
    }
}
def generatorGenerate = {
    relations = true
    deprecated = false
    records = true
    immutablePojos = true
    fluentSetters = true
}

jooq {
    version = '3.9.2'
    edition = 'OSS'
    statics(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = jooqStaticUrl
            user = jooqStaticUser
            password = jooqStaticPassword
        }
        generator {
            name = generatorName
            strategy generatorStrategy
            database generatorDatabase
            generate generatorGenerate
            target {
                packageName = jooqStaticTargetPackage
                directory = jooqStaticOutputDirectory
            }
        }
    }
    mappings(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = jooqMappingsUrl
            user = jooqMappingsUser
            password = jooqMappingsPassword

        }
        generator {
            name = generatorName
            strategy generatorStrategy
            database generatorDatabase
            generate generatorGenerate
            target {
                packageName = jooqMappingsTargetPackage
                directory = jooqMappingsOutputDirectory
            }
        }
    }
}